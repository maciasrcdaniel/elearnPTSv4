PASSWORDS

	- passwords are stored using "one-way encryption algorithms"
		- no way to know the password starting 

	CRYPTOGRAPHIC HASHING FUNCTIONS

		- transform a password from its clear-text form to an encrypted and safe to store form
		- type your password to login to you pc -> os takes password and hashes it -> compares hashes to other passwords
			- do not need to know your password 

	BRUTE FORCE ALGORITHM 

		- cycling through your passwords 

	JOHN THE RIPPER 

		- can mount both brute force and dictionary based attacks against a password database 
		- view hundreds of encryption formats 

			# john --list=formats

		- Ex. 

			1. after getting unauthorized access to a linux machine make a copy of the password files: 
				1a. /etc/passwd = info about the user accounts
				1b. /etc/shadow = info about the actual password hashes 

			2. john needs the username and password hashes to be in the same file
				2a. use 'unshadow' utility

				# unshadow passwd shadow > crackme

			3. password files contain multiple users -> only want to crack some 

				- -users option 

				# john -incremental -users:<users list> <file to crack> 
				# john -incremental -users:victim crackme

			4. to show passwords recovered by john

				- --show

				# john --show crackme 
				victim:teest:1001:1003:,,,:/home/victim:/bin/bash


	DICTIONARY ATTACKS

		- uses common list of passwords instead of trying to guess every letter/character/number 

		- need password file containing the hashes -> dictionary/wordlist -> tool to test 

		- run dictionary attack with john 

			1. pass the wordlist arguement 

				- -wordlist

				# john -wordlist<=custom wordlist file> <file to crack> 

			2. apply some mangling with 

				- -rules 

				# john -wordlist<=custom wordlist file> -rules <file to crack> 

			Ex. crack the crackme file by using john default wordlist:

				# john -wordlist -user=victim, victim2 crackme 

				- if default does not work load custom

				# john -wordlist=mywordlist -users=victim, victim2 crackme 

				- as last resort you can enable dictionary mangling with "-rules"


			- can install useful password dictionaries on owasp seclist project on github

				- will find the dictionaries in: 

					# apt-get install seclists 

					/usr/share/seclists/Passwords 


	RAINBOW TABLES 

		- capacity of cracking passwords based on storage 

		- high success rate to crack passwords if the storage size is adequate 

		

		- OPHCRACK 

			- tool used for windows password recovery
			- only works on windows 
			- onsite you can find free rainbow tables that range from 300mb to 2tb


	JOHN THE RIPPER VIDEO 

		- unshadow and load on different file 

			# unshadow /etc/passwd /etc/shadow > hashes 







